""" servo pyfirmata"""

from pyfirmata import *
from time import sleep
from multiprocessing import Process

port ='/dev/cu.usbmodem14101'
pan=9
tilt=8

sol1 = 3
sol2 = 4

board= Arduino(port) 

board.digital[pan].mode = SERVO
board.digital[tilt].mode = SERVO
LED1 = board.digital[sol1]
LED2 = board.digital[sol2]
# board.digital[sol1].mode = 
# board.digital[sol2].mode = 

# panarr = [31.35013178644372, 36.231038720458145, 35.648519361481746, 40.94717096291249, 39.351676132740224, 42.00534194302722, 40.547504306961365, 21.14094147539809, 14.67809475448921, 9.79604804417774, 6.7048068339069316, 6.650606381786839, 6.346027879245331, 15.828654440476452, 21.94012120580423, 35.69861994147214, 37.68004185785925, 41.986503910910756, 41.09625205430783, 42.73580807572435, 41.939758390952875, 30.642125470518508, 24.51295745604582, 20.075807762690594, 17.30767593320171, 16.512956248680357, 15.72242059716457, 23.17344959345819, 26.792558979879022, 34.90044770437597, 36.70754027829399, 40.37632429593655, 40.8662941185534, 40.56291683853955, 43.27216325583219, 42.87667264176631, 43.985484027097804, 43.58890583922595, 34.61030191778803, 9.078241935741396, 5.108790430223637, 12.20641501455495, 13.620106538411363, 14.049247455085899, 3.1224399479130063, 3.253777890171036, 20.429113001780937]
# tiltarr = [64.54806573369255, 146.04471611433303, 123.1816347993072, 21.100000982391027, 90.78149856063155, 148.81845160254085, 22.930494940315523, 46.748093937410175, 101.28147031555694, 153.86361171922846, 153.2345968518094, 101.83262351977802, 48.20338848562243, 3.3738579635868375, 62.84866674445124, 127.61246447247906, 151.14073302141628, 56.18534192842779, 48.537318284002616, 161.27175300418588, 82.21429261214959, 12.95544031719412, 37.99476913973374, 85.96908788226874, 133.5981136149167, 179.48027961556014, 132.87822854831316, 86.25258504234887, 32.577639122301875, 22.341983946159566, 91.2084489772276, 159.9746006018408, 123.56559790844753, 43.036186670905906, 48.946071474072994, 148.08063881506806, 101.56316281490226, 12.518536620235786, 76.19422231210905, 136.8363376177547, 164.35217162985091, 102.38953849799411, 41.204482961967585, 23.34565889378679, 80.74579243489059, 144.2745623730181, 149.550973406959]
panarr = [78.63250758482812, 76.44634118667621, 77.98166942095001, 76.64814683091755, 78.11665032870158, 76.63317830155617, 78.14185430774623, 77.39829104141737, 72.8136056509018, 72.4526562676248, 73.16994118888695, 72.01314584757142, 73.76958163096631, 71.39803945223805, 74.8371490462059, 71.93823082644742, 74.11900838822537, 71.7578753389561, 74.28791585364759, 72.44665410923267, 74.32116827890474, 73.17696447771672, 62.040833850323324, 61.10663172206724, 63.06391449016341, 59.65433580805407, 64.40297423296978, 57.18937368433285, 66.50165551962569, 54.73803155005113, 68.29315364352462, 53.425808492415676, 59.51562916356514, 65.24314228883863, 59.758840632897375, 64.58444039307113, 60.55393759460145, 64.32747887984526, 62.5705983896273, 77.34206064080912, 77.13234001307933, 77.57743497108271, 76.86811940672688, 77.91943485177036, 76.18474314007396, 78.40351902424393, 78.76685474507335]
tiltarr = [163.24535639650304, 173.68926066970764, 172.49520679418748, 118.45285732503004, 119.00324934565658, 106.10332999356599, 106.41431818808789, 65.46021010293072, 66.79450097192246, 67.76191069519491, 67.80089662776935, 66.62062637454044, 66.7229856146036, 56.3583523019198, 54.07465317261466, 169.10817740368373, 168.92640188943687, 119.24515528294057, 119.31761581332825, 108.25023067755566, 108.87394428402438, 55.824993932632744, 63.86336254526055, 65.25770698666457, 65.21833587352444, 64.42878466509215, 64.4963175666199, 51.53041040997177, 51.863757971498224, 14.713129703966473, 14.56408721621952, 152.6474502732426, 149.35495312575787, 149.40305823073763, 115.77038258530114, 115.89074839601557, 106.16277062308556, 106.17684820630605, 51.76421996761589, 72.1791183415255, 72.76790964250812, 72.7973804637132, 72.02790552791976, 72.09905542905898, 65.37618699494213, 65.43879800006678, 47.02361116792157]

# panarr = tiltarr = [0,90,180,90]

def rotateServo(pin, angle):
    board.digital[pin].write(angle)
    sleep(0.015)

def loop(pt,arr):
    for a in arr:
        rotateServo(pt, a)
        sleep(1)

while True:
    if __name__ == '__main__':
        Process(target=loop, args=(pan,panarr)).start()
        Process(target=loop, args=(tilt, tiltarr)).start()
        LED1.write(1)
    break
LED1.write(0)

# while True:
#     for i in range(0,180):
#         rotateServo(pan,i)
#         rotateServo(tilt,i)
#         LED1.write(1)
#         LED2.write(0)
#     for i in range(180,1,-1):
#         rotateServo(pan,i)
#         rotateServo(tilt,i)
#         LED1.write(0)
#         LED2.write(1)
